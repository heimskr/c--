#name "Why ISA Tests"
#author "Kai Tamkun"
#orcid "0000-0001-7405-6654"
#version "2.0"

table: void*[8];
delay: s64 = 300000;
timeup: u8* = "Time's up\n";
you_pressed: u8* = "You pressed '";
delay_str: u8* = "Delay: ";
pressed_a: u8* = "You pressed 'a' :)\n";

fn main(): void {
	// g: s64;
	// asm("$g -> $1"::g);
	// .s64(g); .c('\n');
	table[2] = &int_timer;
	table[7] = &int_keybrd;
	asm("%rit table");
	asm("%time $1":delay);
	while true {
		asm("<rest>");
	}
}

fn int_keybrd(): void #naked {
	asm("[ $t0");
	asm("[ $t1");
	asm("[ $t2");
	asm("[ $t3");
	asm("[ $a0");
	asm("[ $rt");

	asm("$e2 == 'a' -> $t0");
	asm(": _key_a if $t0");
	asm("$e2 == '=' -> $t0");
	asm(": _key_eq if $t0");
	asm("$e2 == '-' -> $t0");
	asm(": _key_min if $t0");
	asm("$e2 == '\\n' -> $t0");
	asm(": _key_enter if $t0");

	asm("[you_pressed] -> $a0; :: .s");
	asm("<prc $e2>; <prc '\\''>; <prc '\\n'>");
	asm(": _keybrd_end");

	asm("@_key_a");
	asm("[pressed_a] -> $a0; :: .s");
	asm(": _keybrd_end");

	asm("@_key_eq");
	asm("[delay] -> $t0");
	asm("[ $lo; [ $hi");
	asm("$t0 * 11; $lo / 10 -> $t0");
	asm("] $hi; ] $lo");
	asm("$t0 -> [delay]");
	asm("[delay_str] -> $a0; :: .s");
	asm("[delay] -> $t0; <prd $t0>; <prc '\\n'>");
	asm(": _keybrd_end");

	asm("@_key_min");
	asm("[delay] -> $t0");
	asm("[ $lo; [ $hi");
	asm("$t0 * 10; $lo / 11 -> $t0");
	asm("] $hi; ] $lo");
	asm("$t0 -> [delay]");
	asm("[delay_str] -> $a0; :: .s");
	asm("[delay] -> $t0; <prd $t0>; <prc '\\n'>");
	asm(": _keybrd_end");

	asm("@_key_enter");
	asm("[delay] -> $t0");
	asm("%time $t0");

	asm("@_keybrd_end");
	asm("] $rt");
	asm("] $a0");
	asm("] $t3");
	asm("] $t2");
	asm("] $t1");
	asm("] $t0");
	asm(": ] %page $e0");
}

fn int_timer(): void #naked {
	asm("[ $rt");
	asm("[ $a0");
	asm("timeup -> $a0");
	asm("[$a0] -> $a0");
	asm(":: .s");
	asm("[delay] -> $a0");
	asm("%time $a0");
	asm("] $a0");
	asm("] $rt");
	asm(": ] %page $e0");
}
