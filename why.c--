#name "Why ISA Tests"
#author "Kai Tamkun"
#orcid "0000-0001-7405-6654"
#version "2.0"

table: void*[8];
delay: s64 = 300000;
timeup: u8* = "Time's up\n";
you_pressed: u8* = "You pressed '";
delay_str: u8* = "Delay: ";
pressed_a: u8* = "You pressed 'a' :)\n";
timer_ptr: void()* = int_timer;

fn main(): void {
	// g: s64;
	// asm("$g -> $1"::g);
	// .s64(g); .c('\n');
	table[2] = timer_ptr;
	table[7] = int_keybrd;
	asm("%rit table");
	asm("%time $1":delay);
	while true {
		asm("<rest>");
	}
}

fn int_keybrd_(key: u8): void {
	// .s("Key: "); asm("<prx $1>":key:); .c('\n');
	if (key == 'a') {
		.s("You pressed 'a' :)\n");
	} else if (key == '=') {
		delay = delay * 11 / 10;
		.s("Delay: "); .s64(delay); .c('\n');
	} else if (key == '-') {
		delay = delay * 10 / 11;
		.s("Delay: "); .s64(delay); .c('\n');
	} else if (key == '\n') {
		asm("%time $1":delay:);
	} else {
		.s("You pressed '"); .c(key); .c('\''); .c('\n');
	}
}

fn int_keybrd(): void #naked {
	asm("[ $rt; [ $a0");
	asm("$e2 -> $a0; :: int_keybrd_");
	asm("] $a0; ] $rt");
	asm(": ] %page $e0");
}

fn int_timer(): void #naked {
	asm("[ $rt");
	asm("[ $a0");
	asm("timeup -> $a0");
	asm("[$a0] -> $a0");
	asm(":: .s");
	asm("[delay] -> $a0");
	asm("%time $a0");
	asm("] $a0");
	asm("] $rt");
	asm(": ] %page $e0");
}
