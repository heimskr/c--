#name "Example"
#author "Kai Tamkun"
#orcid "0000-0001-7405-6654"
#version "2.1"

n: s64 = 38 + 5;
empty: bool;
dependent: s64 = n * 2;
global_addr: s64* = &dependent;
unsigned: u64 = 60u8;

fn triple_and_add(input: s64, addend: s64): s64 {
	return input << 1 + input + addend;
}

fn typecheck(): void {
	u_8: u8 = 600u16;
	s_16: s16 = 40u8;
	s_32: s32 = -10s8;
	s64_ptr: s64* = (s64*) &s_32;
	void_ptr: void* = s64_ptr;
	// badcast: s64* = void_ptr; // Shouldn't compile
	recast: s64* = (s64*) void_ptr;
}

fn main(argc: u32): void {
	// Functions whose names are "." followed by a type are built-in print functions.
	val: s64 = n - 1;
	wow: s64;
	.s64(n); .c('\n');
	.s64(empty); .c('\n');
	.s64(dependent); .c('\n');
	.s64(global_addr); .c('\n');
	.s64(val); .s(" * 3 + 10 != "); .s64(triple_and_add(triple_and_add(val, 10), triple_and_add(0, 0))); .c('\n');
	ptr_test();
	.s64(badfib(10)); .c('\n');
	.s64(conditional()); .c('\n');
	// .s64(z_split()); .c('\n');
	return 0;
}

fn ptr_test(): void {
	ptr: s64* = &n;
	vptr: void* = ptr;
	.ptr(vptr); .c('\n');
	val: s64 = 12;
	valptr: s64* = &val;
	zero: s64;
	*(valptr + (zero = 0)) = 16;
	.s64(val); .c('\n');
}

fn forever(): void {
	while true {
		.s("Hello!\n");
	};
}

fn badfib(x: s64): s64 {
	if x < 2 {
		return 1;
	} else {
		return badfib(x - 2) + badfib(x - 1);
	};
}

fn conditional(): s64 {
	if true {
		if false {
			return 1;
		} else {
			return 2;
		};
	};
	return 3;
}

/*
fn z_split(): s64 {
	var0: s64 = 0;
	var1: s64 = 1;
	var2: s64 = 2;
	var3: s64 = 3;
	var4: s64 = 4;
	var5: s64 = 5;
	var6: s64 = 6;
	var7: s64 = 7;
	var8: s64 = 8;
	var9: s64 = 9;
	var10: s64 = 10;
	var11: s64 = 11;
	var12: s64 = 12;
	var13: s64 = 13;
	var14: s64 = 14;
	var15: s64 = 15;
	var16: s64 = 16;
	var17: s64 = 17;
	var18: s64 = 18;
	var19: s64 = 19;
	var20: s64 = 20;
	var21: s64 = 21;
	var22: s64 = 22;
	var23: s64 = 23;
	var24: s64 = 24;
	var25: s64 = 25;
	var26: s64 = 26;
	var27: s64 = 27;
	var28: s64 = 28;
	var29: s64 = 29;
	var30: s64 = 30;
	var31: s64 = 31;
	var32: s64 = 32;
	var33: s64 = 33;
	var34: s64 = 34;
	var35: s64 = 35;
	var36: s64 = 36;
	var37: s64 = 37;
	var38: s64 = 38;
	var39: s64 = 39;
	var40: s64 = 40;
	var41: s64 = 41;
	var42: s64 = 42;
	var43: s64 = 43;
	var44: s64 = 44;
	var45: s64 = 45;
	var46: s64 = 46;
	var47: s64 = 47;
	var48: s64 = 48;
	var49: s64 = 49;
	var50: s64 = 50;
	var51: s64 = 51;
	var52: s64 = 52;
	var53: s64 = 53;
	var54: s64 = 54;
	var55: s64 = 55;
	var56: s64 = 56;
	var57: s64 = 57;
	var58: s64 = 58;
	var59: s64 = 59;
	var60: s64 = 60;
	var61: s64 = 61;
	var62: s64 = 62;
	var63: s64 = 63;
	var64: s64 = 64;
	var65: s64 = 65;
	var66: s64 = 66;
	var67: s64 = 67;
	var68: s64 = 68;
	var69: s64 = 69;
	var70: s64 = 70;
	var71: s64 = 71;
	var72: s64 = 72;
	var73: s64 = 73;
	var74: s64 = 74;
	var75: s64 = 75;
	var76: s64 = 76;
	var77: s64 = 77;
	var78: s64 = 78;
	var79: s64 = 79;
	var80: s64 = 80;
	var81: s64 = 81;
	var82: s64 = 82;
	var83: s64 = 83;
	var84: s64 = 84;
	var85: s64 = 85;
	var86: s64 = 86;
	var87: s64 = 87;
	var88: s64 = 88;
	var89: s64 = 89;
	var90: s64 = 90;
	var91: s64 = 91;
	var92: s64 = 92;
	var93: s64 = 93;
	var94: s64 = 94;
	var95: s64 = 95;
	var96: s64 = 96;
	var97: s64 = 97;
	var98: s64 = 98;
	var99: s64 = 99;
	var100: s64 = 100;
	var101: s64 = 101;
	var102: s64 = 102;
	var103: s64 = 103;
	var104: s64 = 104;
	var105: s64 = 105;
	var106: s64 = 106;
	var107: s64 = 107;
	var108: s64 = 108;
	var109: s64 = 109;
	var110: s64 = 110;
	var111: s64 = 111;
	var112: s64 = 112;
	var113: s64 = 113;
	var114: s64 = 114;
	var115: s64 = 115;
	var116: s64 = 116;
	var117: s64 = 117;
	var118: s64 = 118;
	var119: s64 = 119;
	var120: s64 = 120;
	var121: s64 = 121;
	var122: s64 = 122;
	var123: s64 = 123;
	var124: s64 = 124;
	var125: s64 = 125;
	var126: s64 = 126;
	var127: s64 = 127;
	var128: s64 = 128;
	var129: s64 = 129;
	var130: s64 = 130;
	var131: s64 = 131;
	var132: s64 = 132;
	var133: s64 = 133;
	var134: s64 = 134;
	var135: s64 = 135;
	var136: s64 = 136;
	var137: s64 = 137;
	var138: s64 = 138;
	var139: s64 = 139;
	var140: s64 = 140;
	var141: s64 = 141;
	var142: s64 = 142;
	var143: s64 = 143;
	var144: s64 = 144;
	var145: s64 = 145;
	var146: s64 = 146;
	var147: s64 = 147;
	var148: s64 = 148;
	var149: s64 = 149;
	var150: s64 = 150;
	var151: s64 = 151;
	var152: s64 = 152;
	var153: s64 = 153;
	var154: s64 = 154;
	var155: s64 = 155;
	var156: s64 = 156;
	var157: s64 = 157;
	var158: s64 = 158;
	var159: s64 = 159;
	var160: s64 = 160;
	var161: s64 = 161;
	var162: s64 = 162;
	var163: s64 = 163;
	var164: s64 = 164;
	var165: s64 = 165;
	var166: s64 = 166;
	var167: s64 = 167;
	var168: s64 = 168;
	var169: s64 = 169;
	var170: s64 = 170;
	var171: s64 = 171;
	var172: s64 = 172;
	var173: s64 = 173;
	var174: s64 = 174;
	var175: s64 = 175;
	var176: s64 = 176;
	var177: s64 = 177;
	var178: s64 = 178;
	var179: s64 = 179;
	var180: s64 = 180;
	var181: s64 = 181;
	var182: s64 = 182;
	var183: s64 = 183;
	var184: s64 = 184;
	var185: s64 = 185;
	var186: s64 = 186;
	var187: s64 = 187;
	var188: s64 = 188;
	var189: s64 = 189;
	var190: s64 = 190;
	var191: s64 = 191;
	var192: s64 = 192;
	var193: s64 = 193;
	var194: s64 = 194;
	var195: s64 = 195;
	var196: s64 = 196;
	var197: s64 = 197;
	var198: s64 = 198;
	var199: s64 = 199;
	var200: s64 = 200;
	var201: s64 = 201;
	var202: s64 = 202;
	var203: s64 = 203;
	var204: s64 = 204;
	var205: s64 = 205;
	var206: s64 = 206;
	var207: s64 = 207;
	var208: s64 = 208;
	var209: s64 = 209;
	var210: s64 = 210;
	var211: s64 = 211;
	var212: s64 = 212;
	var213: s64 = 213;
	var214: s64 = 214;
	var215: s64 = 215;
	var216: s64 = 216;
	var217: s64 = 217;
	var218: s64 = 218;
	var219: s64 = 219;
	var220: s64 = 220;
	var221: s64 = 221;
	var222: s64 = 222;
	var223: s64 = 223;
	var224: s64 = 224;
	var225: s64 = 225;
	var226: s64 = 226;
	var227: s64 = 227;
	var228: s64 = 228;
	var229: s64 = 229;
	var229 = var50 + 1 + var0;
	var228 = var50 + 1 + var1;
	var227 = var50 + 1 + var2;
	var226 = var50 + 1 + var3;
	var225 = var50 + 1 + var4;
	var224 = var50 + 1 + var5;
	var223 = var50 + 1 + var6;
	var222 = var50 + 1 + var7;
	var221 = var50 + 1 + var8;
	var220 = var50 + 1 + var9;
	var219 = var50 + 1 + var10;
	var218 = var50 + 1 + var11;
	var217 = var50 + 1 + var12;
	var216 = var50 + 1 + var13;
	var215 = var50 + 1 + var14;
	var214 = var50 + 1 + var15;
	var213 = var50 + 1 + var16;
	var212 = var50 + 1 + var17;
	var211 = var50 + 1 + var18;
	var210 = var50 + 1 + var19;
	var209 = var50 + 1 + var20;
	var208 = var50 + 1 + var21;
	var207 = var50 + 1 + var22;
	var206 = var50 + 1 + var23;
	var205 = var50 + 1 + var24;
	var204 = var50 + 1 + var25;
	var203 = var50 + 1 + var26;
	var202 = var50 + 1 + var27;
	var201 = var50 + 1 + var28;
	var200 = var50 + 1 + var29;
	var199 = var50 + 1 + var30;
	var198 = var50 + 1 + var31;
	var197 = var50 + 1 + var32;
	var196 = var50 + 1 + var33;
	var195 = var50 + 1 + var34;
	var194 = var50 + 1 + var35;
	var193 = var50 + 1 + var36;
	var192 = var50 + 1 + var37;
	var191 = var50 + 1 + var38;
	var190 = var50 + 1 + var39;
	var200 = var200 + 100;
	return var200;
}
*/